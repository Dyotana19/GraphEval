# -*- coding: utf-8 -*-
"""create_cytobands.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Mmqa3shuzXCBIMfSf6a16qdzAI-3SY-s
"""

import pandas as pd
import math
import warnings
warnings.filterwarnings("ignore")

#filename = "Merge_CHM13#0_Fragment100_MCv2.tsv"
arg1 = input("Enter the filename used for cytoband creation : ")
filename = arg1
chunk = 300
# read in the TSV file
df = pd.read_csv(filename, sep='\t')

# create an empty dataframe to store the results
result_df = pd.DataFrame(columns=['mean_cost'])

# iterate over the cost column in chunks of 10000
for chunk in pd.read_csv(filename, sep='\t', chunksize=chunk):
    # calculate the mean of the cost column and append it to the result dataframe
    mean_cost = math.ceil(chunk['cost'].mean())
    result_df = result_df.append({'mean_cost': mean_cost}, ignore_index=True)

# print the resulting dataframe
#print(result_df)

# Define a function to assign colors based on cost value
def assign_color(cost):
    if cost == 0:
        return "gneg"
    elif cost > 0 and cost < 1:
        return "gpos25"
    elif cost >= 1 and cost < 2:
        return "gpos55"
    elif cost >= 2 and cost < 3:
        return "stalk"
    else:
        return "acen"

# apply the assign_color function to each row of the "mean_cost" column in df_mean_cost
result_df["color"] = result_df["mean_cost"].apply(assign_color)

# print the resulting dataframe
#print(result_df)
length = len(result_df['mean_cost'])
#print(length)

# Write DataFrame to a TSV file
result_df.to_csv('CHM13#0_gieStain.tsv', sep='\t', index=False)

# Import the required library
import csv

# Define the chromosome name and start position
chr = ['6'] * 52
start = list(range(28510121, 33310121, 100000))

# Define the end position
end = list(range(28610120, 33410120, 100000))

# Define the fourth column with R1, R2, R3, ...
name = ['R' + str(i) for i in range(1, len(chr) + 1)]

# Read the giemsa stain data from another TSV file
gieStain = []
with open('CHM13#0_gieStain.tsv', 'r') as file:
    reader = csv.reader(file, delimiter='\t')
    next(reader) # skip the header row
    for row in reader:
        gieStain.append(row[1])

# Combine the five columns into a list of tuples
data = list(zip(chr, start, end, name,gieStain))

# Write the list of tuples to a TSV file with column headers
with open('output_CHM13#0.tsv', 'w', newline='') as file:
    writer = csv.writer(file, delimiter='\t')
    writer.writerow(['chr','start', 'end', 'name', 'gieStain'])
    writer.writerows(data)

# Read the tsv file into a dataframe
df = pd.read_csv('output_CHM13#0.tsv', sep='\t')
# Write the BED file
df.to_csv('output_CHM13_MCv2.txt', sep='\t', index=False, header=True)

